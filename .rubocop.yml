inherit_from: .rubocop_todo.yml

# ----- CONFIGURED -----

AllCops:
  TargetRubyVersion: "3.2"

plugins:
  - rubocop-minitest
  - rubocop-rake
  - rubocop-rspec

# We use filenames such as “create-site.rb” that translate to method names.
Naming/FileName:
  Exclude:
    - "nanoc-cli/lib/nanoc/cli/commands/*.rb"
    - "nanoc-*/lib/nanoc-*.rb"
    - "nanoc-dart-sass/lib/nanoc/dart-sass.rb"
    - "nanoc-org-mode/lib/nanoc/org-mode.rb"
    - "guard-nanoc/lib/guard-nanoc.rb"
    - "*/*.gemspec"

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

# Having the leading underscore makes it clear that the instance variable is not
# intended to be used directly.
Naming/MemoizedInstanceVariableName:
  EnforcedStyleForLeadingUnderscores: required

Naming/MethodParameterName:
  AllowedNames:
    - "to" # destination
    - "e" # element
    - "fn" # filename
    - "id" # identifier
    - "io" # IO instance
    - "y" # enumerator yielder

# Some specs deal with things that aren’t classes.
RSpec/DescribeClass:
  Exclude:
    - "*/spec/gem_spec.rb"
    - "*/spec/manifest_spec.rb"
    - "*/spec/meta_spec.rb"
    - "nanoc/spec/contributors_spec.rb"
    - "nanoc/spec/nanoc/integration/*_spec.rb"
    - "nanoc/spec/nanoc/regressions/*_spec.rb"
    - "nanoc/spec/regression_filenames_spec.rb"

# ----- CONFIGURED (enabled non-default cops) -----

Layout/ClassStructure:
  Enabled: true
  Include:
    - "nanoc-core/**/*.rb"

Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

Style/AccessorGrouping:
  Enabled: true
  EnforcedStyle: separated

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

# ----- CONFIGURED (exceptions for tests) -----

# This breaks RSpec on occasion, e.g. `expect { subject }.not_to change { foo }`,
# and generally does not provide useful warnings
Lint/AmbiguousBlockAssociation:
  Exclude:
    - "*/spec/**/*.rb"

# `rescue nil` is useful in specs where the exception is not important, but
# the size effects are.
Style/RescueModifier:
  Exclude:
    - "*/spec/**/*.rb"

# A common pattern in tests is to define anonymous classes in which methods are defined, which trips
# up Rubocop’s nested method definition cop.
Lint/NestedMethodDefinition:
  Exclude:
    - "*/test/**/*.rb"
    - "*/spec/**/*.rb"

# This is used in tests, to verify the effect of state-changing functions.
Style/GlobalVars:
  Exclude:
    - "*/test/**/*.rb"
    - "*/spec/**/*.rb"

# This interferes with variables named `focus`.
RSpec/Focus:
  Enabled: false

# ----- ENABLED (new cops not enabled by default) -----

Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Enabled: true

Style/ExponentialNotation:
  Enabled: true

Style/SlicingWithRange:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: true

Lint/BinaryOperatorWithIdenticalOperands:
  Enabled: true

Lint/DuplicateElsifCondition:
  Enabled: true

Lint/DuplicateRescueException:
  Enabled: true

Lint/EmptyConditionalBody:
  Enabled: true

Lint/FloatComparison:
  Enabled: true

Lint/MissingSuper:
  Enabled: true

Lint/OutOfRangeRegexpRef:
  Enabled: true

Lint/SelfAssignment:
  Enabled: true

Lint/TopLevelReturnWithArgument:
  Enabled: true

Lint/UnreachableLoop:
  Enabled: true

Style/ArrayCoercion:
  Enabled: true

Style/BisectedAttrAccessor:
  Enabled: true

Style/CaseLikeIf:
  Enabled: true

Style/ExplicitBlockArgument:
  Enabled: true

Style/GlobalStdStream:
  Enabled: true

Style/HashAsLastArrayItem:
  Enabled: true

Style/HashLikeCase:
  Enabled: true

Style/OptionalBooleanParameter:
  Enabled: true

Style/RedundantAssignment:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: true

Style/RedundantFileExtensionInRequire:
  Enabled: true

Style/SingleArgumentDig:
  Enabled: true

Style/StringConcatenation:
  Enabled: true

Layout/BeginEndAlignment:
  Enabled: true

Lint/ConstantDefinitionInBlock:
  Enabled: true

Lint/DuplicateRequire:
  Enabled: true

Lint/EmptyFile:
  Enabled: true

Lint/HashCompareByIdentity:
  Enabled: true

Lint/IdentityComparison:
  Enabled: true

Lint/RedundantSafeNavigation:
  Enabled: true

Lint/TrailingCommaInAttributeDeclaration:
  Enabled: true

Lint/UselessMethodDefinition:
  Enabled: true

Lint/UselessTimes:
  Enabled: true

Style/ClassEqualityComparison:
  Enabled: true

Style/CombinableLoops:
  Enabled: true

Style/KeywordParametersOrder:
  Enabled: true

Style/RedundantSelfAssignment:
  Enabled: true

Style/SoleNestedConditional:
  Enabled: true

Lint/DuplicateBranch: # (new in 1.3)
  Enabled: true

Lint/DuplicateRegexpCharacterClassElement: # (new in 1.1)
  Enabled: true

Lint/EmptyBlock: # (new in 1.1)
  Enabled: true

Lint/EmptyClass: # (new in 1.3)
  Enabled: true

Lint/NoReturnInBeginEndBlocks: # (new in 1.2)
  Enabled: true

Lint/ToEnumArguments: # (new in 1.1)
  Enabled: true

Lint/UnexpectedBlockArity: # (new in 1.5)
  Enabled: true

Lint/UnmodifiedReduceAccumulator: # (new in 1.1)
  Enabled: true

Style/ArgumentsForwarding: # (new in 1.1)
  Enabled: true

Style/CollectionCompact: # (new in 1.2)
  Enabled: true

Style/DocumentDynamicEvalDefinition: # (new in 1.1)
  Enabled: true

Style/NegatedIfElseCondition: # (new in 1.2)
  Enabled: true

Style/NilLambda: # (new in 1.3)
  Enabled: true

Style/RedundantArgument: # (new in 1.4)
  Enabled: true

Style/SwapValues: # (new in 1.1)
  Enabled: true

Minitest/AssertInDelta: # (new in 0.10)
  Enabled: true

Minitest/AssertionInLifecycleHook: # (new in 0.10)
  Enabled: true

Minitest/AssertKindOf: # (new in 0.10)
  Enabled: true

Minitest/AssertOutput: # (new in 0.10)
  Enabled: true

Minitest/AssertPathExists: # (new in 0.10)
  Enabled: true

Minitest/AssertSilent: # (new in 0.10)
  Enabled: true

Minitest/LiteralAsActualArgument: # (new in 0.10)
  Enabled: true

Minitest/MultipleAssertions: # (new in 0.10)
  Enabled: true

Minitest/RefuteInDelta: # (new in 0.10)
  Enabled: true

Minitest/RefuteKindOf: # (new in 0.10)
  Enabled: true

Minitest/RefutePathExists: # (new in 0.10)
  Enabled: true

Minitest/TestMethodName: # (new in 0.10)
  Enabled: true

Minitest/UnspecifiedException: # (new in 0.10)
  Enabled: true

Layout/SpaceBeforeBrackets: # (new in 1.7)
  Enabled: true

Lint/AmbiguousAssignment: # (new in 1.7)
  Enabled: true

Style/HashExcept: # (new in 1.7)
  Enabled: true

Lint/DeprecatedConstants: # (new in 1.8)
  Enabled: true

Lint/LambdaWithoutLiteralBlock: # (new in 1.8)
  Enabled: true

Lint/RedundantDirGlobSort: # (new in 1.8)
  Enabled: true

Style/EndlessMethod: # (new in 1.8)
  Enabled: true

Lint/NumberedParameterAssignment: # (new in 1.9)
  Enabled: true

Lint/OrAssignmentToConstant: # (new in 1.9)
  Enabled: true

Lint/SymbolConversion: # (new in 1.9)
  Enabled: true

Lint/TripleQuotes: # (new in 1.9)
  Enabled: true

Style/HashConversion: # (new in 1.10)
  Enabled: true

Style/IfWithBooleanLiteralBranches: # (new in 1.9)
  Enabled: true

Style/StringChars: # (new in 1.12)
  Enabled: true

Minitest/AssertWithExpectedArgument: # (new in 0.11)
  Enabled: true

Gemspec/RequireMFA: # new in 1.23
  Enabled: true

Lint/UselessRuby2Keywords: # new in 1.23
  Enabled: true

Naming/BlockForwarding: # new in 1.24
  Enabled: true

Style/FileRead: # new in 1.24
  Enabled: true

Style/FileWrite: # new in 1.24
  Enabled: true

Style/MapToHash: # new in 1.24
  Enabled: true

Style/OpenStructUse: # new in 1.23
  Enabled: true

Gemspec/DeprecatedAttributeAssignment: # new in 1.30
  Enabled: true

Lint/RefinementImportMethods: # new in 1.27
  Enabled: true

Security/CompoundHash: # new in 1.28
  Enabled: true

Style/EnvHome: # new in 1.29
  Enabled: true

Style/FetchEnvVar: # new in 1.28
  Enabled: true

Style/MapCompactWithConditionalBlock: # new in 1.30
  Enabled: true

Style/NestedFileDirname: # new in 1.26
  Enabled: true

Style/ObjectThen: # new in 1.28
  Enabled: true

Style/RedundantInitialize: # new in 1.27
  Enabled: true

Minitest/AssertPredicate: # new in 0.18
  Enabled: true

Minitest/DuplicateTestRun: # new in 0.19
  Enabled: true

Minitest/RefutePredicate: # new in 0.18
  Enabled: true

Minitest/SkipEnsure: # new in 0.20
  Enabled: true

RSpec/BeEq: # new in 2.9.0
  Enabled: true

RSpec/BeNil: # new in 2.9.0
  Enabled: true

RSpec/ChangeByZero: # new in 2.11.0
  Enabled: true

RSpec/VerifiedDoubleReference: # new in 2.10.0
  Enabled: true

Layout/LineContinuationLeadingSpace: # new in 1.31
  Enabled: true

Layout/LineContinuationSpacing: # new in 1.31
  Enabled: true

Lint/ConstantOverwrittenInRescue: # new in 1.31
  Enabled: true

Lint/NonAtomicFileOperation: # new in 1.31
  Enabled: true

Lint/RequireRangeParentheses: # new in 1.32
  Enabled: true

Style/EmptyHeredoc: # new in 1.32
  Enabled: true

Style/MagicCommentFormat: # new in 1.35
  Enabled: true

Minitest/AssertRaisesCompoundBody: # new in 0.21
  Enabled: true

Minitest/AssertRaisesWithRegexpArgument: # new in 0.22
  Enabled: true

RSpec/ClassCheck: # new in 2.13
  Enabled: true

RSpec/NoExpectationExample: # new in 2.13
  Enabled: true

Lint/DuplicateMagicComment: # new in 1.37
  Enabled: true

Style/OperatorMethodCall: # new in 1.37
  Enabled: true

Style/RedundantStringEscape: # new in 1.37
  Enabled: true

RSpec/SortMetadata: # new in 2.14
  Enabled: true

Minitest/EmptyLineBeforeAssertionMethods: # new in 0.23
  Enabled: true

Style/RedundantEach: # new in 1.38
  Enabled: true

Minitest/SkipWithoutReason: # new in 0.24
  Enabled: true

Style/ArrayIntersect: # new in 1.40
  Enabled: true

Style/RedundantConstantBase: # new in 1.40
  Enabled: true

RSpec/DuplicatedMetadata: # new in 2.16
  Enabled: true

RSpec/PendingWithoutReason: # new in 2.16
  Enabled: true

Gemspec/DevelopmentDependencies: # new in 1.44
  Enabled: true

Lint/UselessRescue: # new in 1.43
  Enabled: true

Style/ComparableClamp: # new in 1.44
  Enabled: true

Style/ConcatArrayLiterals: # new in 1.41
  Enabled: true

Style/MapToSet: # new in 1.42
  Enabled: true

Style/MinMaxComparison: # new in 1.42
  Enabled: true

Style/RedundantDoubleSplatHashBraces: # new in 1.41
  Enabled: true

Minitest/AssertSame: # new in 0.26
  Enabled: true

Minitest/RefuteSame: # new in 0.26
  Enabled: true

Minitest/TestFileName: # new in 0.26
  Enabled: true

Minitest/UselessAssertion: # new in 0.26
  Enabled: true

Minitest/NonPublicTestMethod: # new in 0.27
  Enabled: true

Lint/DuplicateMatchPattern: # new in 1.50
  Enabled: true

Metrics/CollectionLiteralLength: # new in 1.47
  Enabled: true

Style/DataInheritance: # new in 1.49
  Enabled: true

Style/DirEmpty: # new in 1.48
  Enabled: true

Style/ExactRegexpMatch: # new in 1.51
  Enabled: true

Style/FileEmpty: # new in 1.48
  Enabled: true

Style/RedundantArrayConstructor: # new in 1.52
  Enabled: true

Style/RedundantFilterChain: # new in 1.52
  Enabled: true

Style/RedundantHeredocDelimiterQuotes: # new in 1.45
  Enabled: true

Style/RedundantLineContinuation: # new in 1.49
  Enabled: true

Style/RedundantRegexpConstructor: # new in 1.52
  Enabled: true

Minitest/LifecycleHooksOrder: # new in 0.28
  Enabled: true

Minitest/ReturnInTestMethod: # new in 0.31
  Enabled: true

RSpec/BeEmpty: # new in 2.20
  Enabled: true

RSpec/ContainExactly: # new in 2.19
  Enabled: true

RSpec/IndexedLet: # new in 2.20
  Enabled: true

RSpec/MatchArray: # new in 2.19
  Enabled: true

RSpec/RedundantAround: # new in 2.19
  Enabled: true

RSpec/SkipBlockInsideExample: # new in 2.19
  Enabled: true

Lint/MixedCaseRange: # new in 1.53
  Enabled: true

Lint/RedundantRegexpQuantifiers: # new in 1.53
  Enabled: true

Style/RedundantCurrentDirectoryInPath: # new in 1.53
  Enabled: true

Style/RedundantRegexpArgument: # new in 1.53
  Enabled: true

Style/ReturnNilInPredicateMethodDefinition: # new in 1.53
  Enabled: true

Style/YAMLFileRead: # new in 1.53
  Enabled: true

RSpec/ReceiveMessages: # new in 2.23
  Enabled: true

Style/SingleLineDoEndBlock: # new in 1.57
  Enabled: true

RSpec/EmptyMetadata: # new in 2.24
  Enabled: true

RSpec/Eq: # new in 2.24
  Enabled: true

RSpec/SpecFilePathSuffix: # new in 2.24
  Enabled: true

Lint/LiteralAssignmentInCondition: # new in 1.58
  Enabled: true

Style/SuperWithArgsParentheses: # new in 1.58
  Enabled: true

Lint/UselessNumericOperation: # new in 1.66
  Enabled: true

Style/RedundantInterpolationUnfreeze: # new in 1.66
  Enabled: true

Lint/ArrayLiteralInRegexp: # new in 1.71
  Enabled: true

Lint/ConstantReassignment: # new in 1.70
  Enabled: true

Lint/SharedMutableDefault: # new in 1.70
  Enabled: true

Style/HashSlice: # new in 1.71
  Enabled: true

Style/ItAssignment: # new in 1.70
  Enabled: true

# ----- DISABLED (new cops not enabled by default; to enable later) -----

Layout/LineEndStringConcatenationIndentation: # new in 1.18
  Enabled: false

Lint/AmbiguousOperatorPrecedence: # new in 1.21
  Enabled: false

Lint/AmbiguousRange: # new in 1.19
  Enabled: false

Lint/EmptyInPattern: # new in 1.16
  Enabled: false

Lint/IncompatibleIoSelectWithFiberScheduler: # new in 1.21
  Enabled: false

Lint/RequireRelativeSelfPath: # new in 1.22
  Enabled: false

Security/IoMethods: # new in 1.22
  Enabled: false

Style/InPatternThen: # new in 1.16
  Enabled: false

Style/MultilineInPatternThen: # new in 1.16
  Enabled: false

Style/NumberedParameters: # new in 1.22
  Enabled: false

Style/NumberedParametersLimit: # new in 1.22
  Enabled: false

Style/QuotedSymbols: # new in 1.16
  Enabled: false

Style/RedundantSelfAssignmentBranch: # new in 1.19
  Enabled: false

Style/SelectByRegexp: # new in 1.22
  Enabled: false

Minitest/UnreachableAssertion: # new in 0.14
  Enabled: false

RSpec/ExcessiveDocstringSpacing: # new in 2.5
  Enabled: false

RSpec/IdenticalEqualityAssertion: # new in 2.4
  Enabled: false

RSpec/SubjectDeclaration: # new in 2.5
  Enabled: false

RSpec/MetadataStyle: # new in 2.24
  Enabled: false

Minitest/AssertOperator: # new in 0.32
  Enabled: false

RSpec/SpecFilePathFormat: # new in 2.24
  Enabled: false

Minitest/RefuteOperator: # new in 0.32
  Enabled: false

Lint/ItWithoutArgumentsInBlock: # new in 1.59
  Enabled: true

Minitest/NonExecutableTestMethod: # new in 0.34
  Enabled: true

Minitest/RedundantMessageArgument: # new in 0.34
  Enabled: true

RSpec/RedundantPredicateMatcher: # new in 2.26
  Enabled: true

RSpec/RemoveConst: # new in 2.26
  Enabled: true

Minitest/Focus: # new in 0.35
  Enabled: true

RSpec/IsExpectedSpecify: # new in 2.27
  Enabled: true

RSpec/RepeatedSubjectCall: # new in 2.27
  Enabled: true

RSpec/EmptyOutput: # new in 2.29
  Enabled: true

RSpec/UndescriptiveLiteralsDescription: # new in 2.29
  Enabled: true

Style/SendWithLiteralMethodName: # new in 1.64
  Enabled: true

Style/SuperArguments: # new in 1.64
  Enabled: true

RSpec/ExpectInLet: # new in 2.30
  Enabled: true

Gemspec/AddRuntimeDependency: # new in 1.65
  Enabled: true

Lint/DuplicateSetElement: # new in 1.67
  Enabled: true

Lint/UnescapedBracketInRegexp: # new in 1.68
  Enabled: true

Style/AmbiguousEndlessMethodDefinition: # new in 1.68
  Enabled: true

Style/BitwisePredicate: # new in 1.68
  Enabled: true

Style/CombinableDefined: # new in 1.68
  Enabled: true

Style/KeywordArgumentsMerging: # new in 1.68
  Enabled: true

Style/SafeNavigationChainLength: # new in 1.68
  Enabled: true

Lint/HashNewWithKeywordArgumentsAsDefault: # new in 1.69
  Enabled: true

Lint/NumericOperationWithConstantResult: # new in 1.69
  Enabled: true

Lint/UselessDefined: # new in 1.69
  Enabled: true

Style/DigChain: # new in 1.69
  Enabled: true

Style/FileNull: # new in 1.69
  Enabled: true

Style/FileTouch: # new in 1.69
  Enabled: true

Lint/CopDirectiveSyntax: # new in 1.72
  Enabled: true

Lint/RedundantTypeConversion: # new in 1.72
  Enabled: true

Lint/SuppressedExceptionInNumberConversion: # new in 1.72
  Enabled: true

Lint/UselessConstantScoping: # new in 1.72
  Enabled: true

Style/RedundantFormat: # new in 1.72
  Enabled: true

Style/ComparableBetween: # new in 1.74
  Enabled: true

Gemspec/AttributeAssignment: # new in 1.77
  Enabled: true

Layout/EmptyLinesAfterModuleInclusion: # new in 1.79
  Enabled: true

Lint/UselessDefaultValueArgument: # new in 1.76
  Enabled: true

Lint/UselessOr: # new in 1.76
  Enabled: true

Style/CollectionQuerying: # new in 1.77
  Enabled: true

Style/EmptyStringInsideInterpolation: # new in 1.76
  Enabled: true

Style/HashFetchChain: # new in 1.75
  Enabled: true

Style/ItBlockParameter: # new in 1.75
  Enabled: true

Style/RedundantArrayFlatten: # new in 1.76
  Enabled: true

Style/ArrayIntersectWithSingleElement: # new in 1.81
  Enabled: true

# ----- TO ENABLE LATER -----

# Valid cops, but fixing the offenses they report is non-trivial.

Style/RegexpLiteral:
  Enabled: false

Style/EmptyElse:
  Enabled: false

Style/Next:
  Enabled: false

Naming/HeredocDelimiterNaming:
  Enabled: false

Style/EvalWithLocation:
  Enabled: false

Layout/LineLength:
  Enabled: false

Lint/MixedRegexpCaptureTypes:
  Enabled: false

# ----- DISABLED (security) -----

# Nanoc runs offline in a trusted environment, and these security checks are false positives.

Security/YAMLLoad:
  Enabled: false

Security/MarshalLoad:
  Enabled: false

Security/Eval:
  Exclude:
    - "*/test/**/*.rb"
    - "*/spec/**/*.rb"
    - "nanoc/lib/nanoc/filters/erubi.rb"

# ----- DISABLED (metrics) -----

# Cops for metrics are disabled because they should not cause tests to fail.

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

# ----- DISABLED (opinionated) -----

# We should embrace UTF-8, not avoid it. Since the Encoding cop is enabled,
# there’s no point in enforcing ASCII comments.
Style/AsciiComments:
  Enabled: false

# It does not make sense to enforce everything to have documentation.
Style/Documentation:
  Enabled: false

# Nanoc suppresses exceptions for valid reasons in a few cases.
Lint/SuppressedException:
  Enabled: false

# if/unless at the end of the line makes it too easy to oversee.
Style/IfUnlessModifier:
  Enabled: false

# Personal preference is to have decent constructors for exceptions rather than
# just a class and a message.
Style/RaiseArgs:
  Enabled: false

# Some methods that appear to be accessors (return a single value or set a
# single value) should still not be considered to be accessors. This is a purely
# semantic difference.
Style/TrivialAccessors:
  Enabled: false

# This does not always semantically make sense.
Style/GuardClause:
  Enabled: false

# Used for “undo work, whatever error happens”
Style/RescueStandardError:
  Enabled: false

# For the sake of consistency, it makes the most sense to retain $stderr.puts
# when used in situations where $stderr.flush, $stderr.print, … are also used.
Style/StderrPuts:
  Enabled: false

# This catches too many false positives. A string that contains a % followed by
# a letter is not always a format string.
Style/FormatStringToken:
  Enabled: false

# Both {} and [] are considered empty, but it’s still important to check whether
# something is {} rather than [] or vice versa.
Minitest/AssertEmptyLiteral:
  Enabled: false

# This is not directly replaceable with `it_behaves_like`.
RSpec/IncludeExamples: # new in 3.6
  Enabled: false

# ----- DISABLED (buggy) -----

# This cop attempts to replace Nanoc::VERSION with described_class, which makes
# the spec fail.
RSpec/DescribedClass:
  Exclude:
    - "**/version_spec.rb"

# This turns
#
#     expect(File.directory?('output')).to be_falsy
#
# into
#
#     expect(File).not_to be_directory('output')
#
# … which does not look right.
RSpec/PredicateMatcher:
  Exclude:
    - "nanoc-core/spec/nanoc/core/item_rep_writer_spec.rb"

# This yields false positives; a class that responds to #each does not
# necessarily also respond to #map.
Style/MapIntoArray:
  Enabled: false

# This incorrectly identifies some methods that return true/false as being predicate methods.
Naming/PredicateMethod:
  Enabled: false
